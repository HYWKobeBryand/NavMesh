文件格式：
	<center pt1 pt2 pt3 open near...><center pt1 pt2 pt3 near...>
	
	
导航网格路径计算
距离算法优化




upIdx = navmesh.begin();
dnIdx = navmesh.begin();
curr = startpt;
up = startpt;
dn = startpt;
i = count - 1;


while (waypoint.back() != endpt)
{
	while (true)
	{
		push curr
		auto ret = GetWayPoint(firstIt, lastIt, up, upIt, dn, dnIt, curr)
		if (0 == ret) 
		{
			break; 
		}
		else if (1 == ret)
		{	push up;
			dn = up;
		}
		else if (2 == ret)
		{

		}
	}
}






	if GetWayPoint(meshIter, up, upIdx, dn, dnIdx, curr)
	{

	}


	push curr
	if (GetWayPoint(meshIter, curr, up, dn, waypt))
	{

	}

	push curr
	if (i != 0)
	{
		if GetWayPoint(meshIter, curr, up, dn, waypt)
			curr = waypt;
			up = waypt;
			dn = waypt;
	}
	else
	{
		isok, isup = CheckSight(curr, up, dn, endpt);
		if (isok)
			push endpt;
		else
		{
			push (isup? up: dn);
			curr = isup? up: dn;
			up = isup? up: dn;
			dn = isup? up: dn;
		}
	}
}
